#!/bin/bash
#
# This file is not run directly, it is instead called from script/bootstrap
#
# Based on ~/.osx — http://mths.be/osx

setup_osx () {
  echo ''
  info 'Configuring osx'

  # Set OS X defaults
  info "Some of these settings will require sudo"

  ###############################################################################
  # General UI/UX                                                               #
  ###############################################################################

  # user "What is your computer name? (e.g. $(scutil --get ComputerName))"
  # read -e osx_computer_name

  # user "What is your computer host name? (e.g. $(scutil --get HostName))"
  # read -e osx_computer_host_name

  # Set computer name (as done via System Preferences → Sharing)
  # sudo scutil --set ComputerName $osx_computer_name
  # sudo scutil --set HostName $osx_computer_host_name
  # sudo scutil --set LocalHostName $osx_computer_host_name.local
  # sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string $osx_computer_host_name
  # success "Host names set"

  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
  success "Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window"

  defaults write com.apple.menuextra.battery ShowPercent -string "NO"
  defaults write com.apple.menuextra.battery ShowTime -string "YES"
  success "Show remaining battery time (on pre-10.8); hide percentage in the menu bar"

  defaults write com.apple.systemuiserver menuExtras -array "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" "/System/Library/CoreServices/Menu Extras/AirPort.menu" "/System/Library/CoreServices/Menu Extras/Battery.menu" "/System/Library/CoreServices/Menu Extras/Clock.menu"
  success "Hide the Time Machine and Volume icons in the menu bar"

  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
  success "Save to disk (not to iCloud) by default"

  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
  success "Automatically quit printer app once the print jobs complete"

  # defaults write com.apple.LaunchServices LSQuarantine -bool false
  # success "Disable the “Are you sure you want to open this application?” dialog"

  # Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
  defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true
  success "Display ASCII control characters using caret notation in standard text views"

  defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
  success "Check for software updates daily, not just once per week"

  ###############################################################################
  # Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
  ###############################################################################

  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
  defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
  success "Enable tap to click for this user and for the login screen"

  # defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
  # defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
  # defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
  # defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true
  # success "Map bottom right corner of the trackpad to right-click"

  defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool true
  defaults -currentHost write NSGlobalDomain com.apple.trackpad.threeFingerHorizSwipeGesture -int 1
  defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 1
  success "Swipe between pages with three fingers on the trackpad"

  defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
  success "Increase sound quality for Bluetooth headphones/headsets"

  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
  success "Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)"

  echo -n 'a' | sudo tee /private/var/db/.AccessibilityAPIEnabled > /dev/null 2>&1
  sudo chmod 444 /private/var/db/.AccessibilityAPIEnabled
  success "Enable access for assistive devices (used by AppleScript for GUI access)"

  defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
  defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
  success "Use scroll gesture with the Ctrl (^) modifier key to zoom"

  defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true
  success "Follow the keyboard focus while zoomed in"

  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
  success "Disable press-and-hold for keys in favor of key repeat"

  defaults write NSGlobalDomain KeyRepeat -int 0
  defaults write -g KeyRepeat -int 1
  success "Set a blazingly fast keyboard repeat rate"

  defaults write com.apple.BezelServices kDim -bool true
  success "Automatically illuminate built-in MacBook keyboard in low light"

  defaults write com.apple.BezelServices kDimTime -int 300
  success "Turn off keyboard illumination when computer is not used for 5 minutes"

  ###############################################################################
  # Screen                                                                      #
  ###############################################################################

  defaults write com.apple.screensaver askForPassword -int 1
  defaults write com.apple.screensaver askForPasswordDelay -int 0
  success "Require password immediately after sleep or screen saver begins"

  defaults write com.apple.screencapture location -string "$HOME/Desktop"
  success "Save screenshots to the desktop"

  defaults write com.apple.screencapture type -string "png"
  success "Save screenshots in PNG format"

  defaults write NSGlobalDomain AppleFontSmoothing -int 2
  success "Enable subpixel font rendering on non-Apple LCDs"

  # Enable HiDPI display modes (requires restart), should be default in retina macs
  # sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

  ###############################################################################
  # Finder                                                                      #
  ###############################################################################

  defaults write com.apple.finder QuitMenuItem -bool true
  success "Allow quitting Finder via ⌘ + Q; doing so will also hide desktop icons"

  # Finder: disable window animations and Get Info animations
  # defaults write com.apple.finder DisableAllAnimations -bool true

  # Show icons for hard drives, servers, and removable media on the desktop
  # defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
  # defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
  # defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
  # defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

  defaults write com.apple.finder AppleShowAllFiles -bool true
  success "Show hidden files by default"

  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  success "Show all filename extensions in Finder"

  defaults write com.apple.finder ShowStatusBar -bool true
  success "Show the status bar in Finder"

  defaults write com.apple.finder ShowPathBar -bool true
  success "Show the path bar in Finder"

  defaults write com.apple.finder QLEnableTextSelection -bool true
  success "Allow text selection in Quick Look"

  defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
  success "Display full path as Finder window title"

  defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
  success "When performing a search, search the current folder by default"

  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  success "Disable the warning when changing a file extension"

  defaults write NSGlobalDomain com.apple.springing.enabled -bool true
  success "Enable spring loading for directories"

  defaults write NSGlobalDomain com.apple.springing.delay -float 0
  success "Remove the spring loading delay for directories"

  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  success "Avoid creating .DS_Store files on network volumes"

  # defaults write com.apple.frameworks.diskimages skip-verify -bool true
  # defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
  # defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
  # success "Disable disk image verification"

  defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
  defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
  defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
  success "Automatically open a new Finder window when a volume is mounted"

  # Show item info near icons on the desktop and in other icon views
  # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

  # Show item info to the right of the icons on the desktop
  # /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

  # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
  # success "Enable snap-to-grid for icons on the desktop and in other icon views"

  # Increase grid spacing for icons on the desktop and in other icon views
  # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

  # Increase the size of icons on the desktop and in other icon views
  # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
  # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

  # Use list view in all Finder windows by default
  # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
  # defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

  # Disable the warning before emptying the Trash
  # defaults write com.apple.finder WarnOnEmptyTrash -bool false

  defaults write com.apple.finder EmptyTrashSecurely -bool true
  success "Empty Trash securely by default"

  defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true
  success "Enable AirDrop over Ethernet and on unsupported Macs running Lion"

  # sudo nvram boot-args="mbasd=1"
  # success "Enable the MacBook Air SuperDrive on any Mac"

  chflags nohidden ~/Library
  success "Show the ~/Library folder"

  file=/Applications/Dropbox.app/Contents/Resources/check.icns
  if [ -e "$file" ]
  then
    mv -f "$file" "$file.bak"
    success "Remove Dropbox’s green checkmark icons in Finder"
  fi
  unset file

  ###############################################################################
  # Dock, Dashboard, and hot corners                                            #
  ###############################################################################

  defaults write com.apple.dock mouse-over-hilite-stack -bool false
  success "Disable highlight hover effect for the grid view of a stack (Dock)"

  # Set the icon size of Dock items to 36 pixels
  # defaults write com.apple.dock tilesize -int 36

  # Enable spring loading for all Dock items
  # defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

  # Show indicator lights for open applications in the Dock
  # defaults write com.apple.dock show-process-indicators -bool true

  # Wipe all (default) app icons from the Dock
  # This is only really useful when setting up a new Mac, or if you don’t use
  # the Dock to launch apps.
  # defaults write com.apple.dock persistent-apps -array

  # Don’t animate opening applications from the Dock
  # defaults write com.apple.dock launchanim -bool false

  # Speed up Mission Control animations
  # defaults write com.apple.dock expose-animation-duration -float 0.1

  # Don’t group windows by application in Mission Control
  # (i.e. use the old Exposé behavior instead)
  # defaults write com.apple.dock expose-group-by-app -bool false

  defaults write com.apple.dock dashboard-in-overlay -bool true
  success "Don’t show Dashboard as a Space"

  defaults write com.apple.dashboard mcx-disabled -bool true
  success "Disable Dashboard"

  defaults write com.apple.dock autohide-delay -float 0
  success "Remove the auto-hiding Dock delay"

  # Remove the animation when hiding/showing the Dock
  # defaults write com.apple.dock autohide-time-modifier -float 0

  # Enable the 2D Dock
  # defaults write com.apple.dock no-glass -bool true

  defaults write com.apple.dock autohide -bool true
  success "Automatically hide and show the Dock"

  defaults write com.apple.dock showhidden -bool true
  success "Make Dock icons of hidden applications translucent"

  # Reset Launchpad
  # find ~/Library/Application\ Support/Dock -name "*.db" -maxdepth 1 -delete

  # Add iOS Simulator to Launchpad
  ln -s /Applications/Xcode.app/Contents/Applications/iPhone\ Simulator.app /Applications/iOS\ Simulator.app

  # Add a spacer to the left side of the Dock (where the applications are)
  # defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
  # Add a spacer to the right side of the Dock (where the Trash is)
  # defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

  # Hot corners
  # Possible values:
  #  0: no-op
  #  2: Mission Control
  #  3: Show application windows
  #  4: Desktop
  #  5: Start screen saver
  #  6: Disable screen saver
  #  7: Dashboard
  # 10: Put display to sleep
  # 11: Launchpad
  # 12: Notification Center

  # Top left screen corner
  defaults write com.apple.dock wvous-tl-corner -int 0
  defaults write com.apple.dock wvous-tl-modifier -int 0
  # Top right screen corner
  defaults write com.apple.dock wvous-tr-corner -int 0
  defaults write com.apple.dock wvous-tr-modifier -int 0
  # Bottom left screen corner
  defaults write com.apple.dock wvous-bl-corner -int 0
  defaults write com.apple.dock wvous-bl-modifier -int 0
  # Bottom right screen corner
  defaults write com.apple.dock wvous-br-corner -int 0
  defaults write com.apple.dock wvous-br-modifier -int 0
  success "Disable hot corner actions"

  ###############################################################################
  # Safari & WebKit                                                             #
  ###############################################################################

  defaults write com.apple.Safari HomePage -string "about:blank"
  success "Set Safari’s home page to \"about:blank\" for faster loading"

  defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
  success "Prevent Safari from opening ‘safe’ files automatically after downloading"

  # defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true
  # success "Allow hitting the Backspace key to go to the previous page in history"

  defaults write com.apple.Safari ShowFavoritesBar -bool false
  success "Hide Safari’s bookmarks bar by default"

  defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
  success "Disable Safari’s thumbnail cache for History and Top Sites"

  defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
  success "Enable Safari’s debug menu"

  defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
  success "Make Safari’s search banners default to Contains instead of Starts With"

  defaults write com.apple.Safari ProxiesInBookmarksBar "()"
  success "Remove useless icons from Safari’s bookmarks bar"

  defaults write com.apple.Safari IncludeDevelopMenu -bool true
  defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
  defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
  success "Enable the Develop menu and the Web Inspector in Safari"

  defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
  success "Add a context menu item for showing the Web Inspector in web views"

  ###############################################################################
  # Mail                                                                        #
  ###############################################################################

  # Disable send and reply animations in Mail.app
  # defaults write com.apple.mail DisableReplyAnimations -bool true
  # defaults write com.apple.mail DisableSendAnimations -bool true

  # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
  # defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

  # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
  # defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" "@\\U21a9"

  ###############################################################################
  # Terminal                                                                    #
  ###############################################################################

  defaults write com.apple.terminal StringEncodings -array 4
  success "Only use UTF-8 in Terminal.app"

  # Use a modified version of the Pro theme by default in Terminal.app
  # open "$HOME/init/Mathias.terminal"
  # sleep 1 # Wait a bit to make sure the theme is loaded
  # defaults write com.apple.terminal "Default Window Settings" -string "Mathias"
  # defaults write com.apple.terminal "Startup Window Settings" -string "Mathias"

  # Enable “focus follows mouse” for Terminal.app and all X11 apps
  # i.e. hover over a window and start typing in it without clicking first
  # defaults write com.apple.terminal FocusFollowsMouse -bool true
  # defaults write org.x.X11 wm_ffm -bool true

  ###############################################################################
  # Time Machine                                                                #
  ###############################################################################

  defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
  success "Prevent Time Machine from prompting to use new hard drives as backup volume"

  hash tmutil &> /dev/null && sudo tmutil disablelocal
  success "Disable local Time Machine backups"

  ###############################################################################
  # Address Book, Dashboard, iCal, TextEdit, and Disk Utility                   #
  ###############################################################################

  # Enable the debug menu in Address Book
  # defaults write com.apple.addressbook ABShowDebugMenu -bool true

  # Enable Dashboard dev mode (allows keeping widgets on the desktop)
  # defaults write com.apple.dashboard devmode -bool true

  # Enable the debug menu in iCal (pre-10.8)
  # defaults write com.apple.iCal IncludeDebugMenu -bool true

  defaults write com.apple.TextEdit RichText -int 0
  success "Use plain text mode for new TextEdit documents"

  defaults write com.apple.TextEdit PlainTextEncoding -int 4
  defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
  success "Open and save files as UTF-8 in TextEdit"

  defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
  defaults write com.apple.DiskUtility advanced-image-options -bool true
  success "Enable the debug menu in Disk Utility"

  ###############################################################################
  # Mac App Store                                                               #
  ###############################################################################

  defaults write com.apple.appstore WebKitDeveloperExtras -bool true
  success "Enable the WebKit Developer Tools in the Mac App Store"

  defaults write com.apple.appstore ShowDebugMenu -bool true
  success "Enable Debug Menu in the Mac App Store"

  ###############################################################################
  # Google Chrome & Google Chrome Canary                                        #
  ###############################################################################

  defaults write com.google.Chrome ExtensionInstallSources -array "https://*.github.com/*" "http://userscripts.org/*"
  defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://*.github.com/*" "http://userscripts.org/*"
  success "Allow installing user scripts via GitHub or Userscripts.org"

  ###############################################################################
  # Twitter.app                                                                 #
  ###############################################################################

  defaults write com.twitter.twitter-mac MenuItemBehavior -int 1
  success "Show the app window when clicking the menu icon"

  defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true
  success "Enable the hidden ‘Develop’ menu"

  defaults write com.twitter.twitter-mac openLinksInBackground -bool true
  success "Open links in the background"

  defaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true
  success "Allow closing the ‘new tweet’ window by pressing ’Esc’"

  defaults write com.twitter.twitter-mac ShowFullNames -bool true
  success "Show full names rather than Twitter handles"

  defaults write com.twitter.twitter-mac HideInBackground -bool true
  success "Hide the app in the background if it’s not the front-most window"

  info "Note that some of these changes require a logout/restart to take effect."
}
